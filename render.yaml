services:
  - type: web
    name: tonforge-web
    env: python
    healthCheckPath: /healthz
    buildCommand: pip install -r requirements.txt
    preDeployCommand: python -m database.migrate
    startCommand: uvicorn webview.backend.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: ENV
        value: production
      - key: DATABASE_URL
        sync: false
      - key: BASE_WEBAPP_URL
        value: https://tonforge-web.onrender.com
      - key: TON_API_KEY
        sync: false
      - key: TON_WALLET
        sync: false
      - key: REDIS_URL            # если будешь инжектить URL из Redis-ресурса
        sync: false

  - type: worker
    name: tonforge-bot
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: python -m main
    envVars:
      - key: ENV
        value: production
      - key: DATABASE_URL
        sync: false
      - key: BOT_TOKEN
        sync: false
      - key: TON_API_KEY
        sync: false
      - key: TON_WALLET
        sync: false
      - key: REDIS_URL
        sync: false
      - key: ENABLE_SCHEDULER
        value: "0"

cronJobs:
  - name: daily-accruals
    schedule: "0 1 * * *"
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: python -m jobs.accruals

databases:
  - name: tonforge-db
    plan: free

redis:
  - name: tonforge-kv
    plan: free
    maxmemoryPolicy: noeviction
    ipAllowList: []         # доступ только изнутри Render (по умолчанию ок)